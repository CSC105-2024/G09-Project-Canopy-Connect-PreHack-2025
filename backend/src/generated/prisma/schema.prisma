// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  email     String    @unique
  profile   String? //store user profile picture in url
  posts     Post[]
  likes     Like[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId    Int
  author      User    @relation(fields: [authorId], references: [id])
  authorName  String
  authorImage String?

  images   Image[]
  files    File[]
  links    Link[]
  tags     Tag[]
  likes    Like[]
  comments Comment[]

  @@index([authorId])
}

model Like {
  id     Int @id @default(autoincrement())
  userId Int
  postId Int

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  userId    Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
}

model Image {
  id     Int    @id @default(autoincrement())
  url    String
  postId Int
  post   Post   @relation(fields: [postId], references: [id])
}

model File {
  id     Int    @id @default(autoincrement())
  name   String
  url    String
  postId Int
  post   Post   @relation(fields: [postId], references: [id])
}

model Link {
  id     Int    @id @default(autoincrement())
  url    String
  postId Int
  post   Post   @relation(fields: [postId], references: [id])
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}
